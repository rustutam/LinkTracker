package backend.academy.scrapper.models.external.github;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

@JsonIgnoreProperties(ignoreUnknown = true)
public record RepositoryDto(
    Long id,
    @JsonProperty("node_id") String nodeId,
    String name,
    @JsonProperty("full_name") String fullName,
    Boolean isPrivate,
    OwnerDto owner,
    @JsonProperty("html_url") String htmlUrl,
    String description,
    Boolean fork,
    String url,
    @JsonProperty("forks_url") String forksUrl,
    @JsonProperty("keys_url") String keysUrl,
    @JsonProperty("collaborators_url") String collaboratorsUrl,
    @JsonProperty("teams_url") String teamsUrl,
    @JsonProperty("hooks_url") String hooksUrl,
    @JsonProperty("issue_events_url") String issueEventsUrl,
    @JsonProperty("events_url") String eventsUrl,
    @JsonProperty("assignees_url") String assigneesUrl,
    @JsonProperty("branches_url") String branchesUrl,
    @JsonProperty("tags_url") String tagsUrl,
    @JsonProperty("blobs_url") String blobsUrl,
    @JsonProperty("git_tags_url") String gitTagsUrl,
    @JsonProperty("git_refs_url") String gitRefsUrl,
    @JsonProperty("trees_url") String treesUrl,
    @JsonProperty("statuses_url") String statusesUrl,
    @JsonProperty("languages_url") String languagesUrl,
    @JsonProperty("stargazers_url") String stargazersUrl,
    @JsonProperty("contributors_url") String contributorsUrl,
    @JsonProperty("subscribers_url") String subscribersUrl,
    @JsonProperty("subscription_url") String subscriptionUrl,
    @JsonProperty("commits_url") String commitsUrl,
    @JsonProperty("git_commits_url") String gitCommitsUrl,
    @JsonProperty("comments_url") String commentsUrl,
    @JsonProperty("issue_comment_url") String issueCommentUrl,
    @JsonProperty("contents_url") String contentsUrl,
    @JsonProperty("compare_url") String compareUrl,
    @JsonProperty("merges_url") String mergesUrl,
    @JsonProperty("archive_url") String archiveUrl,
    @JsonProperty("downloads_url") String downloadsUrl,
    @JsonProperty("issues_url") String issuesUrl,
    @JsonProperty("pulls_url") String pullsUrl,
    @JsonProperty("milestones_url") String milestonesUrl,
    @JsonProperty("notifications_url") String notificationsUrl,
    @JsonProperty("labels_url") String labelsUrl,
    @JsonProperty("releases_url") String releasesUrl,
    @JsonProperty("deployments_url") String deploymentsUrl,
    @JsonProperty("created_at") OffsetDateTime createdAt,
    @JsonProperty("updated_at") OffsetDateTime updatedAt,
    @JsonProperty("pushed_at") OffsetDateTime pushedAt,
    @JsonProperty("git_url") String gitUrl,
    @JsonProperty("ssh_url") String sshUrl,
    @JsonProperty("clone_url") String cloneUrl,
    @JsonProperty("svn_url") String svnUrl,
    String homepage,
    Integer size,
    @JsonProperty("stargazers_count") Integer stargazersCount,
    @JsonProperty("watchers_count") Integer watchersCount,
    String language,
    @JsonProperty("has_issues") Boolean hasIssues,
    @JsonProperty("has_projects") Boolean hasProjects,
    @JsonProperty("has_downloads") Boolean hasDownloads,
    @JsonProperty("has_wiki") Boolean hasWiki,
    @JsonProperty("has_pages") Boolean hasPages,
    @JsonProperty("has_discussions") Boolean hasDiscussions,
    @JsonProperty("forks_count") Integer forksCount,
    @JsonProperty("mirror_url") String mirrorUrl,
    Boolean archived,
    Boolean disabled,
    @JsonProperty("open_issues_count") Integer openIssuesCount,
    Object license, // Можно заменить на конкретный DTO для лицензии
    @JsonProperty("allow_forking") Boolean allowForking,
    @JsonProperty("is_template") Boolean isTemplate,
    @JsonProperty("web_commit_signoff_required") Boolean webCommitSignoffRequired,
    List<String> topics,
    String visibility,
    Integer forks,
    @JsonProperty("open_issues") Integer openIssues,
    Integer watchers,
    @JsonProperty("default_branch") String defaultBranch,
    @JsonProperty("temp_clone_token") String tempCloneToken,
    @JsonProperty("network_count") Integer networkCount,
    @JsonProperty("subscribers_count") Integer subscribersCount
) {
    @JsonIgnoreProperties(ignoreUnknown = true)
    public record OwnerDto(
        String login,
        Long id,
        @JsonProperty("node_id") String nodeId,
        @JsonProperty("avatar_url") String avatarUrl,
        @JsonProperty("html_url") String htmlUrl,
        String type
    ) {}
}
